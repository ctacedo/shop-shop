{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tempe\\\\Desktop\\\\shop-shop\\\\client\\\\src\\\\components\\\\Cart\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    ;\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  if (!state.cartOpen) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDED2\"));\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    state.cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({\n          sessionId: data.checkout.session\n        });\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, \"Shopping Cart\"), state.cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, state.cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"shocked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"));\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/tempe/Desktop/shop-shop/client/src/components/Cart/index.js"],"names":["React","useEffect","CartItem","Auth","useStoreContext","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","QUERY_CHECKOUT","loadStripe","useLazyQuery","stripePromise","Cart","state","dispatch","getCheckout","data","getCart","cart","type","products","length","toggleCart","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","cartOpen","submitCheckout","productIds","i","push","_id","variables","then","res","redirectToCheckout","sessionId","checkout","session","map","loggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport './style.css';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n    const [state, dispatch] = useStoreContext();\r\n\r\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n    useEffect(() => {\r\n      async function getCart() {\r\n        const cart = await idbPromise('cart', 'get');\r\n        dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n      };\r\n    \r\n      if (!state.cart.length) {\r\n        getCart();\r\n      }\r\n    }, [state.cart.length, dispatch]);\r\n\r\nfunction toggleCart() {\r\n  dispatch({ type: TOGGLE_CART });\r\n}\r\n\r\nfunction calculateTotal() {\r\n  let sum = 0;\r\n  state.cart.forEach(item => {\r\n    sum += item.price * item.purchaseQuantity;\r\n  });\r\n  return sum.toFixed(2);\r\n}\r\n\r\nif (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span\r\n          role=\"img\"\r\n          aria-label=\"trash\">ðŸ›’</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n  \r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    })\r\n\r\n    getCheckout({\r\n      variables: { products: productIds }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n  <div className=\"close\" onClick={toggleCart}>[close]</div>\r\n  <h2>Shopping Cart</h2>\r\n  {state.cart.length ? (\r\n    <div>\r\n      {state.cart.map(item => (\r\n        <CartItem key={item._id} item={item} />\r\n      ))}\r\n      <div className=\"flex-row space-between\">\r\n        <strong>Total: ${calculateTotal()}</strong>\r\n        {\r\n          Auth.loggedIn() ?\r\n          <button onClick={submitCheckout}>\r\n           Checkout\r\n          </button>\r\n            :\r\n            <span>(log in to check out)</span>\r\n        }\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h3>\r\n      <span role=\"img\" aria-label=\"shocked\">\r\n        ðŸ˜±\r\n      </span>\r\n      You haven't added anything to your cart yet!\r\n    </h3>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}